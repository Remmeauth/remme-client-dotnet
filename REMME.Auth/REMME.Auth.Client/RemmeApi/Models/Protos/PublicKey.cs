// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: pub_key.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from pub_key.proto</summary>
public static partial class PubKeyReflection
{

    #region Descriptor
    /// <summary>File descriptor for pub_key.proto</summary>
    public static pbr::FileDescriptor Descriptor
    {
        get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PubKeyReflection()
    {
        byte[] descriptorData = global::System.Convert.FromBase64String(
            string.Concat(
              "Cg1wdWJfa2V5LnByb3RvIi8KDFB1YktleU1ldGhvZCIfCgZNZXRob2QSCQoF",
              "U1RPUkUQABIKCgZSRVZPS0UQASKpAgoQTmV3UHViS2V5UGF5bG9hZBISCgpw",
              "dWJsaWNfa2V5GAEgASgJEjUKD3B1YmxpY19rZXlfdHlwZRgCIAEoDjIcLk5l",
              "d1B1YktleVBheWxvYWQuUHViS2V5VHlwZRIxCgtlbnRpdHlfdHlwZRgDIAEo",
              "DjIcLk5ld1B1YktleVBheWxvYWQuRW50aXR5VHlwZRITCgtlbnRpdHlfaGFz",
              "aBgEIAEoCRIdChVlbnRpdHlfaGFzaF9zaWduYXR1cmUYBSABKAkSEgoKdmFs",
              "aWRfZnJvbRgGIAEoDRIQCgh2YWxpZF90bxgHIAEoDSImCgpFbnRpdHlUeXBl",
              "EgwKCFBFUlNPTkFMEAASCgoGU0VSVkVSEAEiFQoKUHViS2V5VHlwZRIHCgNS",
              "U0EQACImChNSZXZva2VQdWJLZXlQYXlsb2FkEg8KB2FkZHJlc3MYASABKAki",
              "UwoNUHViS2V5U3RvcmFnZRINCgVvd25lchgBIAEoCRIiCgdwYXlsb2FkGAIg",
              "ASgLMhEuTmV3UHViS2V5UGF5bG9hZBIPCgdyZXZva2VkGAMgASgIYgZwcm90",
              "bzM="));
        descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
            new pbr::FileDescriptor[] { },
            new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::PubKeyMethod), global::PubKeyMethod.Parser, null, null, new[]{ typeof(global::PubKeyMethod.Types.Method) }, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::NewPubKeyPayload), global::NewPubKeyPayload.Parser, new[]{ "PublicKey", "PublicKeyType", "EntityType", "EntityHash", "EntityHashSignature", "ValidFrom", "ValidTo" }, null, new[]{ typeof(global::NewPubKeyPayload.Types.EntityType), typeof(global::NewPubKeyPayload.Types.PubKeyType) }, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::RevokePubKeyPayload), global::RevokePubKeyPayload.Parser, new[]{ "Address" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PubKeyStorage), global::PubKeyStorage.Parser, new[]{ "Owner", "Payload", "Revoked" }, null, null, null)
            }));
    }
    #endregion

}
#region Messages
public sealed partial class PubKeyMethod : pb::IMessage<PubKeyMethod>
{
    private static readonly pb::MessageParser<PubKeyMethod> _parser = new pb::MessageParser<PubKeyMethod>(() => new PubKeyMethod());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PubKeyMethod> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor
    {
        get { return global::PubKeyReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor
    {
        get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PubKeyMethod()
    {
        OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PubKeyMethod(PubKeyMethod other) : this()
    {
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PubKeyMethod Clone()
    {
        return new PubKeyMethod(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other)
    {
        return Equals(other as PubKeyMethod);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PubKeyMethod other)
    {
        if (ReferenceEquals(other, null))
        {
            return false;
        }
        if (ReferenceEquals(other, this))
        {
            return true;
        }
        return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode()
    {
        int hash = 1;
        if (_unknownFields != null)
        {
            hash ^= _unknownFields.GetHashCode();
        }
        return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString()
    {
        return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output)
    {
        if (_unknownFields != null)
        {
            _unknownFields.WriteTo(output);
        }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize()
    {
        int size = 0;
        if (_unknownFields != null)
        {
            size += _unknownFields.CalculateSize();
        }
        return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PubKeyMethod other)
    {
        if (other == null)
        {
            return;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input)
    {
        uint tag;
        while ((tag = input.ReadTag()) != 0)
        {
            switch (tag)
            {
                default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
            }
        }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the PubKeyMethod message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types
    {
        public enum Method
        {
            [pbr::OriginalName("STORE")] Store = 0,
            [pbr::OriginalName("REVOKE")] Revoke = 1,
        }

    }
    #endregion

}

public sealed partial class NewPubKeyPayload : pb::IMessage<NewPubKeyPayload>
{
    private static readonly pb::MessageParser<NewPubKeyPayload> _parser = new pb::MessageParser<NewPubKeyPayload>(() => new NewPubKeyPayload());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NewPubKeyPayload> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor
    {
        get { return global::PubKeyReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor
    {
        get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewPubKeyPayload()
    {
        OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewPubKeyPayload(NewPubKeyPayload other) : this()
    {
        publicKey_ = other.publicKey_;
        publicKeyType_ = other.publicKeyType_;
        entityType_ = other.entityType_;
        entityHash_ = other.entityHash_;
        entityHashSignature_ = other.entityHashSignature_;
        validFrom_ = other.validFrom_;
        validTo_ = other.validTo_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewPubKeyPayload Clone()
    {
        return new NewPubKeyPayload(this);
    }

    /// <summary>Field number for the "public_key" field.</summary>
    public const int PublicKeyFieldNumber = 1;
    private string publicKey_ = "";
    /// <summary>
    /// PEM Encoded public key
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PublicKey
    {
        get { return publicKey_; }
        set
        {
            publicKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
    }

    /// <summary>Field number for the "public_key_type" field.</summary>
    public const int PublicKeyTypeFieldNumber = 2;
    private global::NewPubKeyPayload.Types.PubKeyType publicKeyType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NewPubKeyPayload.Types.PubKeyType PublicKeyType
    {
        get { return publicKeyType_; }
        set
        {
            publicKeyType_ = value;
        }
    }

    /// <summary>Field number for the "entity_type" field.</summary>
    public const int EntityTypeFieldNumber = 3;
    private global::NewPubKeyPayload.Types.EntityType entityType_ = 0;
    /// <summary>
    /// For future ACME support(Now only Personal)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NewPubKeyPayload.Types.EntityType EntityType
    {
        get { return entityType_; }
        set
        {
            entityType_ = value;
        }
    }

    /// <summary>Field number for the "entity_hash" field.</summary>
    public const int EntityHashFieldNumber = 4;
    private string entityHash_ = "";
    /// <summary>
    /// hash of PEM encoded public key of certificate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EntityHash
    {
        get { return entityHash_; }
        set
        {
            entityHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
    }

    /// <summary>Field number for the "entity_hash_signature" field.</summary>
    public const int EntityHashSignatureFieldNumber = 5;
    private string entityHashSignature_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EntityHashSignature
    {
        get { return entityHashSignature_; }
        set
        {
            entityHashSignature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
    }

    /// <summary>Field number for the "valid_from" field.</summary>
    public const int ValidFromFieldNumber = 6;
    private uint validFrom_;
    /// <summary>
    /// UNIX time when validity begins
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ValidFrom
    {
        get { return validFrom_; }
        set
        {
            validFrom_ = value;
        }
    }

    /// <summary>Field number for the "valid_to" field.</summary>
    public const int ValidToFieldNumber = 7;
    private uint validTo_;
    /// <summary>
    /// UNIX time when validity ends
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ValidTo
    {
        get { return validTo_; }
        set
        {
            validTo_ = value;
        }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other)
    {
        return Equals(other as NewPubKeyPayload);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NewPubKeyPayload other)
    {
        if (ReferenceEquals(other, null))
        {
            return false;
        }
        if (ReferenceEquals(other, this))
        {
            return true;
        }
        if (PublicKey != other.PublicKey) return false;
        if (PublicKeyType != other.PublicKeyType) return false;
        if (EntityType != other.EntityType) return false;
        if (EntityHash != other.EntityHash) return false;
        if (EntityHashSignature != other.EntityHashSignature) return false;
        if (ValidFrom != other.ValidFrom) return false;
        if (ValidTo != other.ValidTo) return false;
        return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode()
    {
        int hash = 1;
        if (PublicKey.Length != 0) hash ^= PublicKey.GetHashCode();
        if (PublicKeyType != 0) hash ^= PublicKeyType.GetHashCode();
        if (EntityType != 0) hash ^= EntityType.GetHashCode();
        if (EntityHash.Length != 0) hash ^= EntityHash.GetHashCode();
        if (EntityHashSignature.Length != 0) hash ^= EntityHashSignature.GetHashCode();
        if (ValidFrom != 0) hash ^= ValidFrom.GetHashCode();
        if (ValidTo != 0) hash ^= ValidTo.GetHashCode();
        if (_unknownFields != null)
        {
            hash ^= _unknownFields.GetHashCode();
        }
        return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString()
    {
        return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output)
    {
        if (PublicKey.Length != 0)
        {
            output.WriteRawTag(10);
            output.WriteString(PublicKey);
        }
        if (PublicKeyType != 0)
        {
            output.WriteRawTag(16);
            output.WriteEnum((int)PublicKeyType);
        }
        if (EntityType != 0)
        {
            output.WriteRawTag(24);
            output.WriteEnum((int)EntityType);
        }
        if (EntityHash.Length != 0)
        {
            output.WriteRawTag(34);
            output.WriteString(EntityHash);
        }
        if (EntityHashSignature.Length != 0)
        {
            output.WriteRawTag(42);
            output.WriteString(EntityHashSignature);
        }
        if (ValidFrom != 0)
        {
            output.WriteRawTag(48);
            output.WriteUInt32(ValidFrom);
        }
        if (ValidTo != 0)
        {
            output.WriteRawTag(56);
            output.WriteUInt32(ValidTo);
        }
        if (_unknownFields != null)
        {
            _unknownFields.WriteTo(output);
        }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize()
    {
        int size = 0;
        if (PublicKey.Length != 0)
        {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(PublicKey);
        }
        if (PublicKeyType != 0)
        {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)PublicKeyType);
        }
        if (EntityType != 0)
        {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)EntityType);
        }
        if (EntityHash.Length != 0)
        {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(EntityHash);
        }
        if (EntityHashSignature.Length != 0)
        {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(EntityHashSignature);
        }
        if (ValidFrom != 0)
        {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ValidFrom);
        }
        if (ValidTo != 0)
        {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ValidTo);
        }
        if (_unknownFields != null)
        {
            size += _unknownFields.CalculateSize();
        }
        return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NewPubKeyPayload other)
    {
        if (other == null)
        {
            return;
        }
        if (other.PublicKey.Length != 0)
        {
            PublicKey = other.PublicKey;
        }
        if (other.PublicKeyType != 0)
        {
            PublicKeyType = other.PublicKeyType;
        }
        if (other.EntityType != 0)
        {
            EntityType = other.EntityType;
        }
        if (other.EntityHash.Length != 0)
        {
            EntityHash = other.EntityHash;
        }
        if (other.EntityHashSignature.Length != 0)
        {
            EntityHashSignature = other.EntityHashSignature;
        }
        if (other.ValidFrom != 0)
        {
            ValidFrom = other.ValidFrom;
        }
        if (other.ValidTo != 0)
        {
            ValidTo = other.ValidTo;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input)
    {
        uint tag;
        while ((tag = input.ReadTag()) != 0)
        {
            switch (tag)
            {
                default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                case 10:
                    {
                        PublicKey = input.ReadString();
                        break;
                    }
                case 16:
                    {
                        publicKeyType_ = (global::NewPubKeyPayload.Types.PubKeyType)input.ReadEnum();
                        break;
                    }
                case 24:
                    {
                        entityType_ = (global::NewPubKeyPayload.Types.EntityType)input.ReadEnum();
                        break;
                    }
                case 34:
                    {
                        EntityHash = input.ReadString();
                        break;
                    }
                case 42:
                    {
                        EntityHashSignature = input.ReadString();
                        break;
                    }
                case 48:
                    {
                        ValidFrom = input.ReadUInt32();
                        break;
                    }
                case 56:
                    {
                        ValidTo = input.ReadUInt32();
                        break;
                    }
            }
        }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the NewPubKeyPayload message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types
    {
        public enum EntityType
        {
            [pbr::OriginalName("PERSONAL")] Personal = 0,
            [pbr::OriginalName("SERVER")] Server = 1,
        }

        public enum PubKeyType
        {
            [pbr::OriginalName("RSA")] Rsa = 0,
        }

    }
    #endregion

}

public sealed partial class RevokePubKeyPayload : pb::IMessage<RevokePubKeyPayload>
{
    private static readonly pb::MessageParser<RevokePubKeyPayload> _parser = new pb::MessageParser<RevokePubKeyPayload>(() => new RevokePubKeyPayload());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RevokePubKeyPayload> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor
    {
        get { return global::PubKeyReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor
    {
        get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RevokePubKeyPayload()
    {
        OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RevokePubKeyPayload(RevokePubKeyPayload other) : this()
    {
        address_ = other.address_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RevokePubKeyPayload Clone()
    {
        return new RevokePubKeyPayload(this);
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 1;
    private string address_ = "";
    /// <summary>
    /// The address of a certificate in the storage generated by the transaction processor.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address
    {
        get { return address_; }
        set
        {
            address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other)
    {
        return Equals(other as RevokePubKeyPayload);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RevokePubKeyPayload other)
    {
        if (ReferenceEquals(other, null))
        {
            return false;
        }
        if (ReferenceEquals(other, this))
        {
            return true;
        }
        if (Address != other.Address) return false;
        return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode()
    {
        int hash = 1;
        if (Address.Length != 0) hash ^= Address.GetHashCode();
        if (_unknownFields != null)
        {
            hash ^= _unknownFields.GetHashCode();
        }
        return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString()
    {
        return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output)
    {
        if (Address.Length != 0)
        {
            output.WriteRawTag(10);
            output.WriteString(Address);
        }
        if (_unknownFields != null)
        {
            _unknownFields.WriteTo(output);
        }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize()
    {
        int size = 0;
        if (Address.Length != 0)
        {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
        }
        if (_unknownFields != null)
        {
            size += _unknownFields.CalculateSize();
        }
        return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RevokePubKeyPayload other)
    {
        if (other == null)
        {
            return;
        }
        if (other.Address.Length != 0)
        {
            Address = other.Address;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input)
    {
        uint tag;
        while ((tag = input.ReadTag()) != 0)
        {
            switch (tag)
            {
                default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                case 10:
                    {
                        Address = input.ReadString();
                        break;
                    }
            }
        }
    }

}

public sealed partial class PubKeyStorage : pb::IMessage<PubKeyStorage>
{
    private static readonly pb::MessageParser<PubKeyStorage> _parser = new pb::MessageParser<PubKeyStorage>(() => new PubKeyStorage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PubKeyStorage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor
    {
        get { return global::PubKeyReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor
    {
        get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PubKeyStorage()
    {
        OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PubKeyStorage(PubKeyStorage other) : this()
    {
        owner_ = other.owner_;
        Payload = other.payload_ != null ? other.Payload.Clone() : null;
        revoked_ = other.revoked_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PubKeyStorage Clone()
    {
        return new PubKeyStorage(this);
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 1;
    private string owner_ = "";
    /// <summary>
    /// The UID field of a certificate.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owner
    {
        get { return owner_; }
        set
        {
            owner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 2;
    private global::NewPubKeyPayload payload_;
    /// <summary>
    /// indicates if this key was revoked
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NewPubKeyPayload Payload
    {
        get { return payload_; }
        set
        {
            payload_ = value;
        }
    }

    /// <summary>Field number for the "revoked" field.</summary>
    public const int RevokedFieldNumber = 3;
    private bool revoked_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Revoked
    {
        get { return revoked_; }
        set
        {
            revoked_ = value;
        }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other)
    {
        return Equals(other as PubKeyStorage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PubKeyStorage other)
    {
        if (ReferenceEquals(other, null))
        {
            return false;
        }
        if (ReferenceEquals(other, this))
        {
            return true;
        }
        if (Owner != other.Owner) return false;
        if (!object.Equals(Payload, other.Payload)) return false;
        if (Revoked != other.Revoked) return false;
        return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode()
    {
        int hash = 1;
        if (Owner.Length != 0) hash ^= Owner.GetHashCode();
        if (payload_ != null) hash ^= Payload.GetHashCode();
        if (Revoked != false) hash ^= Revoked.GetHashCode();
        if (_unknownFields != null)
        {
            hash ^= _unknownFields.GetHashCode();
        }
        return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString()
    {
        return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output)
    {
        if (Owner.Length != 0)
        {
            output.WriteRawTag(10);
            output.WriteString(Owner);
        }
        if (payload_ != null)
        {
            output.WriteRawTag(18);
            output.WriteMessage(Payload);
        }
        if (Revoked != false)
        {
            output.WriteRawTag(24);
            output.WriteBool(Revoked);
        }
        if (_unknownFields != null)
        {
            _unknownFields.WriteTo(output);
        }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize()
    {
        int size = 0;
        if (Owner.Length != 0)
        {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Owner);
        }
        if (payload_ != null)
        {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Payload);
        }
        if (Revoked != false)
        {
            size += 1 + 1;
        }
        if (_unknownFields != null)
        {
            size += _unknownFields.CalculateSize();
        }
        return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PubKeyStorage other)
    {
        if (other == null)
        {
            return;
        }
        if (other.Owner.Length != 0)
        {
            Owner = other.Owner;
        }
        if (other.payload_ != null)
        {
            if (payload_ == null)
            {
                payload_ = new global::NewPubKeyPayload();
            }
            Payload.MergeFrom(other.Payload);
        }
        if (other.Revoked != false)
        {
            Revoked = other.Revoked;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input)
    {
        uint tag;
        while ((tag = input.ReadTag()) != 0)
        {
            switch (tag)
            {
                default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                case 10:
                    {
                        Owner = input.ReadString();
                        break;
                    }
                case 18:
                    {
                        if (payload_ == null)
                        {
                            payload_ = new global::NewPubKeyPayload();
                        }
                        input.ReadMessage(payload_);
                        break;
                    }
                case 24:
                    {
                        Revoked = input.ReadBool();
                        break;
                    }
            }
        }
    }

}

#endregion


#endregion Designer generated code
